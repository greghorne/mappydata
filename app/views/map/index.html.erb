<!DOCTYPE html>
<html>
<head>
	<title>MappyData</title>
	<%= stylesheet_link_tag    'application', media: 'all', 'data-turbolinks-track' => true %>
	<%= javascript_include_tag 'application', 'data-turbolinks-track' => true %>
	<%= csrf_meta_tags %>

	<style type="text/css">
	
	 	html, body {
			height: 100%;
			margin: 0;
			padding: 0;
		}

		#map { 
			height: 90%; 
		}

		#geolocateUI, #clearMapUI {
			background-color: #fff;
			border: 2px solid #fff;
			border-radius: 3px;
			box-shadow: 0 2px 6px rgba(0,0,0,.3);
			cursor: pointer;
			float: left;
			margin: 5px 10px 0 0;
			text-align: center;
		}

		#geolocateText, #clearMapText {
			color: rgb(25,25,25);
			font-family: Roboto,Arial,sans-serif;
			font-size: 15px;
			line-height: 25px;
			padding-left: 5px;
			padding-right: 5px;
		}

		#clearMapUI {
			margin-left: 12px;
		}

		.controls {
			margin-top: 10px;
			border: 1px solid transparent;
			border-radius: 2px 0 0 2px;
			box-sizing: border-box;
			-moz-box-sizing: border-box;
			height: 32px;
			outline: none;
			box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
		}

		#pac-input {
			background-color: #fff;
			font-family: Roboto;
			font-size: 15px;
			font-weight: 300;
			margin-left: 0px;
			padding: 0 11px 0 13px;
			text-overflow: ellipsis;
			width: 300px;
		}

		#pac-input: focus {
			border-color: #4d90fe;
		}

		.pac-container {
			font-family: Roboto;
		}

		#type-selector {
			color: #fff;
			background-color: : #4d90fe;
			padding: 5px 11px 0px 11px;
		}

		#type-selector label {
			font-family: Roboto;
			font-size: 13px;
			font-weight: 300;
		}

		#panel, #flip, #info {
		    padding: 15px;
		    text-align: center;
		    background-color: rgb(45, 49, 63);
		    border: solid 1px #c3c3c3;
			color: #fff;
			font-family: Roboto,Arial,sans-serif;
			font-size: 15px;	    
		}

		#panel {
		    padding: 15px;
		    display: none;
		}

		#info{
			padding: 5;
		}


	</style>
</head>

<body>



	
	<div id="flip">Click for information about this website.</div>
	<div id="panel">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</div>
	
	<input id='pac-input' class='controls' type='text' placeholder='Search Box' style='border-radius:3px; background-color:#fff; visibility: hidden'>
	<div id='map'></div>
	<div id='info'>www.mappydata.com</div>

	<script type="text/javascript">

	$(document).ready(function(){
	    $("#flip").click(function(){
	        $("#panel").slideToggle("slow");
	    });
	});


	/////////////////////////////////////////

	// default location and zooms
	var latitude = 35.746512259918504;
	var longitude = -96.9873046875;
	var zoom = 4;
	var zoomGeoLocation = 17;

	var map;
	var drawingmanager;
	var infowindow;

	function initMap() {

  		// Create a map object and specify the DOM element for display.
  		map = new google.maps.Map(document.getElementById('map'), {
    		center: {lat: latitude, lng: longitude},
    		scrollwheel: true,
    		zoom: zoom,
    		scaleControl: true,
    		streetViewControl: false,

  			mapTypeControl: true,
  			mapTypeControlOptions: {
  				style: google.maps.MapTypeControlStyle.HORIZONTAL_BAR,
  				mapTypeIds: [
  					google.maps.MapTypeId.ROADMAP,
  					google.maps.MapTypeId.TERRAIN,
  					google.maps.MapTypeId.SATELLITE,
  					google.maps.MapTypeId.HYBRID
  				]
  			},

	        // This is where you would paste any style found on Snazzy Maps.
	        // styles: [{"featureType":"administrative","elementType":"all","stylers":[{"visibility":"on"},{"lightness":33}]},{"featureType":"landscape","elementType":"all","stylers":[{"color":"#f2e5d4"}]},{"featureType":"poi.park","elementType":"geometry","stylers":[{"color":"#c5dac6"}]},{"featureType":"poi.park","elementType":"labels","stylers":[{"visibility":"on"},{"lightness":20}]},{"featureType":"road","elementType":"all","stylers":[{"lightness":20}]},{"featureType":"road.highway","elementType":"geometry","stylers":[{"color":"#c5c6c6"}]},{"featureType":"road.arterial","elementType":"geometry","stylers":[{"color":"#e4d7c6"}]},{"featureType":"road.local","elementType":"geometry","stylers":[{"color":"#fbfaf7"}]},{"featureType":"water","elementType":"all","stylers":[{"visibility":"on"},{"color":"#acbcc9"}]}]

			styles: [{"elementType":"geometry","stylers":[{"hue":"#ff4400"},{"saturation":-68},{"lightness":-4},{"gamma":0.72}]},{"featureType":"road","elementType":"labels.icon"},{"featureType":"landscape.man_made","elementType":"geometry","stylers":[{"hue":"#0077ff"},{"gamma":3.1}]},{"featureType":"water","stylers":[{"hue":"#00ccff"},{"gamma":0.44},{"saturation":-33}]},{"featureType":"poi.park","stylers":[{"hue":"#44ff00"},{"saturation":-23}]},{"featureType":"water","elementType":"labels.text.fill","stylers":[{"hue":"#007fff"},{"gamma":0.77},{"saturation":65},{"lightness":99}]},{"featureType":"water","elementType":"labels.text.stroke","stylers":[{"gamma":0.11},{"weight":5.6},{"saturation":99},{"hue":"#0091ff"},{"lightness":-86}]},{"featureType":"transit.line","elementType":"geometry","stylers":[{"lightness":-48},{"hue":"#ff5e00"},{"gamma":1.2},{"saturation":-23}]},{"featureType":"transit","elementType":"labels.text.stroke","stylers":[{"saturation":-64},{"hue":"#ff9100"},{"lightness":16},{"gamma":0.47},{"weight":2.7}]}]


  		});
  		initDrawingManager();
  		initSearchBoxControl();

  		// Set up of custom button controls
		var customControlsDiv = document.createElement('div');
		var customControls = new initCustomControls(customControlsDiv, map);
		
		customControlsDiv.index = 1;
		customControlsDiv.style['padding-top'] = '10px';
		map.controls[google.maps.ControlPosition.TOP_RIGHT].push(customControlsDiv);
		
  	};

  	function initDrawingManager() {
  		// drawing manager set up (drawing tools)
  		drawingManager = new google.maps.drawing.DrawingManager({
  			drawingMode: google.maps.drawing.OverlayType.DEFAULT,
  			drawingControl: true,
  			drawingControlOptions: {

  			 	position: google.maps.ControlPosition.LEFT_TOP,
  				drawingModes: [
  					google.maps.drawing.OverlayType.POLYGON,
  					google.maps.drawing.OverlayType.CIRCLE,
  					google.maps.drawing.OverlayType.RECTANGLE
  				]
  			}
  		});
  		drawingManager.setMap(map);

  		// event - draw polygon
  		google.maps.event.addListener(drawingManager, 'polygoncomplete', function(polygon) {
  			console.log("polygoncomplete")
  			var verticies = polygon.getPath();
  			for (var n = 0; n < verticies.getLength(); n++) {
  				xy = verticies.getAt(n);
  				console.log(xy.lat() + ", " + xy.lng());
  			}
  			console.log("----------")
  			drawingManager.setDrawingMode(null)
  		})

  		// event - draw circle
  		google.maps.event.addListener(drawingManager, 'circlecomplete', function(circle) {
  			console.log("circlecomplete");
  			console.log(circle.getCenter().lat() + ", " + circle.getCenter().lng());
  			console.log(circle.getRadius() + " metres");
  			console.log("----------")
  			drawingManager.setDrawingMode(null)
  		})

  		// event - draw rectangle
  		google.maps.event.addListener(drawingManager, 'rectanglecomplete', function(rectangle) {
  			console.log("rectanglecomplete")
  			console.log("NE: " + rectangle.getBounds().getNorthEast().lat() + ", " + rectangle.getBounds().getNorthEast().lng());
			console.log("SW: " + rectangle.getBounds().getSouthWest().lat() + ", " + rectangle.getBounds().getSouthWest().lng());
			console.log("----------")
			drawingManager.setDrawingMode(null)
  		})

  		// event - draw overlay complete
		google.maps.event.addListener(drawingManager, 'ovelaycomplete', function(event) {
			console.log(event.type);
			console.log("overlaycomplete");
		});
	};

	function initSearchBoxControl() {

		//////////////////////////////
		// Search Box
		var input = document.getElementById('pac-input');
		var searchBox = new google.maps.places.SearchBox(input);
		map.controls[google.maps.ControlPosition.TOP_CENTER].push(input);

		map.addListener('bounds_changed', function() {
			searchBox.setBounds(map.getBounds());
		});

		var markers = [];
		// [START region_getplaces]
		// Listen for the event fired when the user selects a prediction and retrieve
		// more details for that place.
		searchBox.addListener('places_changed', function() {
			var places = searchBox.getPlaces();

			if (places.length == 0) {
			  return;
			}

			// Clear out the old markers.
			markers.forEach(function(marker) { 
			  marker.setMap(null);
			});
			markers = [];

			// For each place, get the icon, name and location.
			var bounds = new google.maps.LatLngBounds();
			places.forEach(function(place) {
				var icon = {
					url: place.icon,
					size: new google.maps.Size(71, 71),
					origin: new google.maps.Point(0, 0),
					anchor: new google.maps.Point(17, 34),
					scaledSize: new google.maps.Size(25, 25)
				};

				// Create a marker for each place.
				markers.push(new google.maps.Marker({
					map: map,
					icon: icon,
					title: place.name,
					position: place.geometry.location
				}));
			
				if (place.geometry.viewport) {
					// Only geocodes have viewport.
					bounds.union(place.geometry.viewport);
				} else {
					bounds.extend(place.geometry.location);
				}
			});
			map.fitBounds(bounds);		
		});
		
	};




	//////////////////////////////
	// Custom button controls set up
	//////////////////////////////
	function initCustomControls(controlDiv, map) {

		// We set up a variable for this since we're adding event listeners later.
		var control = this;

		// Set CSS for the control border
		var geolocateUI = document.createElement('div');
		geolocateUI.id = 'geolocateUI';
		geolocateUI.title = 'Click to geolocate on map';
		controlDiv.appendChild(geolocateUI);

		// Set CSS for the control interior
		var geolocateText = document.createElement('div');
		geolocateText.id = 'geolocateText';
		geolocateText.innerHTML = 'Geolocate';
		geolocateUI.appendChild(geolocateText);

		// Click event for Geolocate
		geolocateUI.addEventListener('click', function() {
			var options = { timeout: 5000, enableHighAccuracy: true }
			navigator.geolocation.getCurrentPosition(success, error, options)
		});
		//////////////////////////////


		//////////////////////////////
		// Clear Map
		//////////////////////////////
		var clearMapUI = document.createElement('div');
		clearMapUI.id = 'clearMapUI';
		clearMapUI.title = 'Click to clear map';
		controlDiv.appendChild(clearMapUI);

		// Set CSS for the control interior
		var clearMapText = document.createElement('div');
		clearMapText.id = 'clearMapText';
		clearMapText.innerHTML = 'Clear Map';
		clearMapUI.appendChild(clearMapText);

		// Set up the click event listener for 'Set Center': Set the center of the
		// control to the current center of the map.
		clearMapUI.addEventListener('click', function() {
			if (infowindow) {
				infowindow.close();
			}
		});
		//////////////////////////////

	};
	//////////////////////////////


	//////////////////////////////	
	// Geolocation 'success' function
	//////////////////////////////
	function success(location) {

		if (infowindow) {
			infowindow.close();
		}

		latitude = location.coords.latitude;
		longitude = location.coords.longitude;

		var position = {
			lat: latitude,
			lng: longitude
		};
		map.setCenter(position)
		map.setZoom(zoomGeoLocation)

		infowindow = new google.maps.InfoWindow({map: map});
		infowindow.setPosition(position)
		infowindow.setContent('<center>Your approximate location<br>(More or less ' + location.coords.accuracy.toString() + '  metres)</center>')

		// setTimeout(function() { infowindow.close(); }, 10000 );
	};
	//////////////////////////////


	//////////////////////////////
	// Geolocation 'error' function
	//////////////////////////////
	function error(error) {
		console.log("Error: getCurrentPosition: " + error)
	}
	//////////////////////////////


	function clearMap(controlDiv, map) {

	}

	</script>
        
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAiI4PW3tjubRo0375oqXCV_ma9r68LvHs&callback=initMap&libraries=drawing,places" async defer>
    </script>

 <!--   <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAiI4PW3tjubRo0375oqXCV_ma9r68LvHs&callback=initMap&libraries=drawing"
        async defer>
    </script> -->
</body>
</html>
